type Institution = record {
    id: principal;
    name: text;
    fullName: text;
    status: variant { active; inactive };
    joinTime: nat64;
    lastActive: nat64;
    apiCalls: nat64;
    dccConsumed: nat64;
    dataUploads: nat64;
    creditScore: nat64;
    tokenTrading: record {
        bought: nat64;
        sold: nat64;
    };
};

type CreditRecord = record {
    id: nat64;
    institution: principal;
    subject_id: text;
    record_type: text;
    data_hash: text;
    timestamp: nat64;
    is_valid: bool;
};

service : {
    register_institution: (text, text) -> (principal);
    get_institution: (principal) -> (opt Institution) query;
    get_all_institutions: () -> (vec Institution) query;
    update_institution_status: (principal, bool) -> ();
    update_credit_score: (principal, nat64) -> ();
    record_api_call: (principal, nat64) -> ();
    record_data_upload: (principal, nat64) -> ();
    record_token_trading: (principal, bool, nat64) -> ();
}


